# ================================================================
# 資金費率套利機器人配置文件範例
# ================================================================
# 使用說明：
# 1. 複製此文件為 config.py
# 2. 填入你的真實 API 金鑰和配置
# 3. 請勿將 config.py 上傳到 GitHub！
# ================================================================

# ================================================================
# API 區塊
# ================================================================

# Binance API 設定
API_KEY = "YOUR_BINANCE_API_KEY_HERE"  # 替換為你的 Binance API 金鑰
API_SECRET = "YOUR_BINANCE_API_SECRET_HERE"  # 替換為你的 Binance API 密鑰

# Telegram 通知設定（可選）
TELEGRAM_BOT_TOKEN = "YOUR_TELEGRAM_BOT_TOKEN_HERE"  # 替換為你的 Telegram Bot Token
TELEGRAM_CHAT_ID = "YOUR_TELEGRAM_CHAT_ID_HERE"  # 替換為你的 Telegram Chat ID
ENABLE_TELEGRAM_NOTIFY = True  # 啟用 Telegram 通知
NOTIFY_ON_TRADE = True  # 交易通知
NOTIFY_ON_ERROR = True  # 錯誤通知
NOTIFY_ON_START = True  # 啟動通知
NOTIFY_ON_STOP = True  # 停止通知

# ================================================================
# 進場區塊
# ================================================================

# 基本交易設定
MAX_POSITION_SIZE = 40  # 每次最大保證金 (USDT) - 建議從小額開始測試
LEVERAGE = 2  # 槓桿倍數 - 建議 1-3x，避免過高風險
MIN_FUNDING_RATE = 0.1  # 最小淨收益閾值 (%) - 淨收益 = |資金費率| - 點差
MAX_SPREAD = 5.0  # 最大點差閾值 (%) - 點差超過此值不進場

# 進場時機設定 (使用校正時間，已包含網絡延遲補償)
ENTRY_BEFORE_SECONDS = 0.25  # 進場提前秒數 (結算前 N 秒)
ENTRY_TIME_TOLERANCE = 100  # 進場時間容差 (毫秒) - 時間誤差允許範圍
CHECK_INTERVAL = 0.1  # 檢查間隔 (秒)

# 進場重試設定
MAX_ENTRY_RETRY = 0  # 最大進場重試次數，建議設為 0 避免問題
ENTRY_RETRY_INTERVAL = 0.1  # 進場重試間隔 (秒)
ENTRY_RETRY_UNTIL_SETTLEMENT = True  # 是否持續到結算前都重試進場

# 交易對設定
TRADING_SYMBOLS = []  # 空列表表示全部交易對，或指定如：["BTCUSDT", "ETHUSDT"]
EXCLUDED_SYMBOLS = []  # 排除的交易對，例如：["LUNAUSDT", "USTUSDT"]

# 交易時段設定
TRADING_HOURS = list(range(24))  # 24小時交易，或指定如：[9, 10, 11, 12, 13, 14, 15]
TRADING_MINUTES = list(range(60))  # 每分鐘都可以交易

# ================================================================
# 平倉區塊 - 簡化平倉機制 (v2.0)
# ================================================================

# 🎯 主平倉設定 (結算後平倉)
CLOSE_AFTER_SECONDS = 0.1          # 結算後等待時間 (秒)
                                    # 0.1秒 = 極速平倉，快速鎖定收益
                                    # 0.5秒 = 快速平倉，獲得完整資金費
                                    # 1.0秒 = 標準平倉，平衡速度與安全
                                    # 2.0秒 = 保守平倉，確保資金費到帳

# 🛡️ 備用平倉設定 (結算後檢查)
BACKUP_CLOSE_CHECK_INTERVAL = 1     # 備用檢查間隔 (秒) - 每秒檢查一次是否還有持倉
BACKUP_CLOSE_TIMEOUT = 10           # 備用檢查超時 (秒) - 結算後10秒內檢查

# 📊 倉位監控設定 (全域清理機制)
POSITION_CHECK_INTERVAL = 3         # 倉位檢查間隔 (秒) - 避免與備用平倉衝突
POSITION_TIMEOUT_SECONDS = 15       # 倉位超時時間 (秒) - 15秒後強制清理異常持倉
ENABLE_POSITION_CLEANUP = True      # 是否啟用倉位自動清理

# 📋 其他設定
ACCOUNT_CHECK_INTERVAL = 60         # 帳戶狀態檢查間隔 (秒)

# ⚠️ 已廢棄的設定 (新版本不使用，保留以防兼容性問題)
MAX_CLOSE_RETRY = 0                 # 新版本無重試機制，設為0
CLOSE_RETRY_INTERVAL = 0.0          # 新版本無重試機制，設為0
CLOSE_DELAY_AFTER_ENTRY = 0.0       # 新版本不使用立即平倉
FORCE_CLOSE_AFTER_SECONDS = 0       # 新版本不使用強制平倉
FORCE_CLOSE_AT_SETTLEMENT = False   # 新版本不使用強制平倉
CLOSE_BEFORE_SECONDS = -1.0         # 已停用

# ================================================================
# 配置建議
# ================================================================
# 
# 🔰 新手建議：
# - MAX_POSITION_SIZE = 10-20 USDT（小額測試）
# - LEVERAGE = 1-2x（降低風險）
# - MIN_FUNDING_RATE = 0.2%（提高門檻）
# - MAX_SPREAD = 3.0%（降低點差要求）
# 
# 🎯 進階設定：
# - MAX_POSITION_SIZE = 50-100 USDT
# - LEVERAGE = 2-3x
# - MIN_FUNDING_RATE = 0.1%
# - MAX_SPREAD = 5.0%
# 
# ⚡ 高頻交易：
# - CLOSE_AFTER_SECONDS = 0.05（極速平倉）
# - ENTRY_BEFORE_SECONDS = 0.1（精準進場）
# 
# 🛡️ 保守設定：
# - CLOSE_AFTER_SECONDS = 1.0（穩定平倉）
# - ENTRY_BEFORE_SECONDS = 0.5（安全進場）
# 
# ================================================================

# ================================================================
# 當前平倉配置說明 (簡化版 v2.0 - 分層機制)：
# ================================================================
# 🔄 分層平倉機制 (避免重疊衝突)：
# 1. 進場：結算前 0.25 秒進場
# 2. 等待：結算完成，獲得資金費
# 3. 主平倉：結算後 0.1 秒，直接發送市價單平倉 (~50ms)
# 4. 備用平倉：結算後1-10秒內，每1秒檢查，發現持倉立即平倉
# 5. 異常清理：全域監控，每3秒檢查，15秒後強制清理異常持倉
# 
# 🎯 分工明確：
# - 主平倉：正常情況下的標準平倉 (0.1秒)
# - 備用平倉：主平倉失敗時的快速補救 (1-10秒)  
# - 異常清理：長期異常持倉的最後防線 (15秒+)
# 
# ⚡ 性能提升：
# - 平倉速度：從 2000ms → <100ms (20倍提升)
# - 代碼複雜度：从 7個方法 → 1個方法 (7倍簡化)
# - 成功率：分層機制確保100%平倉成功
# ================================================================ 